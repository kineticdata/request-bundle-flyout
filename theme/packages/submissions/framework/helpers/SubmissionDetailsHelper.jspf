<%!
    /**
     * SubmissionDetailsHelper
     *
     * This is used to help associate the actual records that the task is referring to
     */
    public static class SubmissionDetailsHelper {
        /**
         *  @param HelperContext object
         *  @param csrv string
         *  @return incidentsByToken Map<String, Incident>
         */
        public static Map<String, Incident> mapIncidentsByToken(HelperContext context, String templateId, String submissionId) {
            // Get all incidents by submissionId
            BridgeList<Incident> incidents = Incident.findBySubmissionId(context, templateId, submissionId);
            // Build map by token
            Map<String, Incident> incidentsByToken = new java.util.HashMap<String, Incident>();
            for (Incident incident : incidents) {
                incidentsByToken.put(incident.getToken(), incident);
            }
            return incidentsByToken;
        }

        /**
         *  @param HelperContext object
         *  @param csrv string
         *  @return changesByToken Map<String, Change>
         */
        public static Map<String, Change> mapChangesByToken(HelperContext context, String templateId, String submissionId) {
            // Get all changes by submissionId
            BridgeList<Change> changes = Change.findBySubmissionId(context, templateId, submissionId);
            // Build map by token
            Map<String, Change> changesByToken = new java.util.HashMap<String, Change>();
            for (Change change : changes) {
                changesByToken.put(change.getToken(), change);
            }
            return changesByToken;
        }
    }
%>