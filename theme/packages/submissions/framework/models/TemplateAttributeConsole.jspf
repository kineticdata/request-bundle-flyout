<%!
    // Indexed Fields: SurveyTemplate +
    public static class TemplateAttributeConsole {
        public static final String FORM_NAME = "KS_SRV_SurveyTemplateAttrInstance_join";

        public static final String FIELD_ATTRIBUTE_NAME = "710000069";
        public static final String FIELD_TEMPLATE_ID = "179";
        public static final String FIELD_ATTRIBUTE_VALUE = "710000073";
        public static final String FIELD_CATALOG_NAME = "600000500";
        public static final String FIELD_TEMPLATE_NAME = "700001000";
        public static final String[] FIELD_IDS = new String[]{
            FIELD_ATTRIBUTE_NAME, FIELD_TEMPLATE_ID, FIELD_ATTRIBUTE_VALUE, FIELD_CATALOG_NAME,
            FIELD_TEMPLATE_NAME};

        private SimpleEntry entry = null;

        public TemplateAttributeConsole(SimpleEntry entry) {
            this.entry = entry;
        }

        public static TemplateAttributeConsole findByTemplateNameAndAttributeName(HelperContext context, String catalogName, String templateName, String attributeName) {
            TemplateAttributeConsole result = null;

            String qualification =  "'" + FIELD_CATALOG_NAME + "' = \"" + catalogName + "\" AND " +
                "'" + FIELD_TEMPLATE_NAME + "' = \"" + templateName + "\" AND " +
                "'" + FIELD_ATTRIBUTE_NAME + "' = \"" + attributeName + "\"";

            SimpleEntry entry = ArsBase.findSingle(context, FORM_NAME, qualification, FIELD_IDS);
            if (entry != null) {
                result = new TemplateAttributeConsole(entry);
            }

            return result;
        }

        public String getCatalogName() {return entry.getEntryFieldValue(FIELD_CATALOG_NAME);}
        public String getName() {return entry.getEntryFieldValue(FIELD_ATTRIBUTE_NAME);}
        public String getTemplateName() {return entry.getEntryFieldValue(FIELD_TEMPLATE_NAME);}
        public String getValue() {return entry.getEntryFieldValue(FIELD_ATTRIBUTE_VALUE);}

        public String toJson() {
            StringBuilder builder = new StringBuilder();
            builder.append("{");
            builder.append("catalogName: '").append(getCatalogName()).append("'").append(",");
            builder.append("name: '").append(getName()).append("'").append(",");
            builder.append("templateName: '").append(getTemplateName()).append("'").append(",");;
            builder.append("value: '").append(getValue()).append("'");
            builder.append("}");
            return builder.toString();
        }
    }
%>